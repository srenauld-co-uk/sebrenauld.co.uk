{"version":3,"file":"static/webpack/static\\development\\pages\\resume.js.25de25dba0b2150c1c0b.hot-update.js","sources":["webpack:///./template/slider.js"],"sourcesContent":["import React from 'react';\r\nlet SliderBackground = (props) => {\r\n    return (<div className=\"slider-item slider-background\" style={{\r\n        \"backgroundImage\": `url(${props.image})`\r\n    }}>\r\n        {props.content}\r\n    </div>);\r\n}\r\nconst Transition = {\r\n    WebkitTransition: \"all 0.5s ease\",\r\n    MozTransition: \"all 0.5s ease\",\r\n    MsTransition: \"all 0.5s ease\",\r\n    OTransition: \"all 0.5s ease\",\r\n    transition: \"all 0.5s ease\",\r\n};\r\nconst NoTransition = {\r\n    WebkitTransition: \"none\",\r\n    MozTransition: \"none\",\r\n    MsTransition: \"none\",\r\n    OTransition: \"none\",\r\n    transition: \"none\",\r\n};\r\n\r\nlet SliderForeground = (props) => {\r\n    let position = props.position || 50;\r\n    let fadeIn = position-10 > 0 ? position-10 : 0;\r\n    let fadeOut = position+10 > 100 ? 100 : position+10;\r\n    return (<div className=\"slider-item slider-foreground\" style={{\r\n        \"backgroundImage\": `url(${props.image})`,\r\n        \"WebkitMaskImage\": \"linear-gradient(80deg, rgba(0,0,0,1) \"+fadeIn+\"%, rgba(0,0,0,0) \"+fadeOut+\"%)\",\r\n        \"MozMaskImage\": \"linear-gradient(80deg, rgba(0,0,0,1) \"+fadeIn+\"%, rgba(0,0,0,0) \"+fadeOut+\"%)\",\r\n        \"maskImage\": \"linear-gradient(80deg, rgba(0,0,0,1) \"+fadeIn+\"%, rgba(0,0,0,0) \"+fadeOut+\"%)\",\r\n    }}>\r\n        {props.content}\r\n    </div>);\r\n}\r\n\r\nexport default class Slider extends React.Component {\r\n\r\n    pulsePosition(offset) {\r\n        return {\r\n            width: (50 + offset) + \"px\",\r\n            height: (50 + offset) + \"px\",\r\n            top: this.state.height/2 - offset/2+\"px\",\r\n            left: this.state.markerPos - offset/2+\"px\"\r\n        }\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            position: props.position || 50,\r\n            width: -1,\r\n            height: -1,\r\n            markerPos: 0,\r\n            pulse: false,\r\n            pulseState: 0,\r\n            dragging: false\r\n        };\r\n        this.ref = React.createRef();\r\n        this.button = React.createRef();\r\n        this.shadow = React.createRef();\r\n        this.pulse = null;\r\n        this.shiftX = 0;\r\n        this.dragging = false;\r\n    }\r\n    resize() {\r\n        let elementWidth = this.ref.current.offsetWidth;\r\n        let elementHeight = this.ref.current.offsetHeight;\r\n        let starterPos = elementWidth * this.state.position/100;\r\n        let markerPos = starterPos + (elementHeight/2) * 0.1736;\r\n        this.setState({\r\n            width: elementWidth,\r\n            height: elementHeight,\r\n            markerPos: markerPos\r\n        });\r\n        this.startPulse();\r\n    }\r\n    startPulse() {\r\n        if (this.pulse) {\r\n            clearInterval(this.pulse);\r\n            this.pulse = null;\r\n        }\r\n        this.setState({\r\n            pulse: true,\r\n            pulseState: 3\r\n        });\r\n        this.pulse = setInterval(() => {\r\n            this.setState({\r\n                pulseState: (this.state.pulseState + 1) % 5\r\n            })\r\n        }, 500)\r\n    }\r\n\r\n    stopPulse() {\r\n        if (this.pulse) {\r\n            clearInterval(this.pulse);\r\n            this.pulse = null;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", () => {\r\n            this.resize();\r\n        });\r\n        this.resize();\r\n    }\r\n    static getDerivedStateFromProps(props, oldState = {}) {\r\n        if (!oldState.position) return {\r\n            position: props.position || 50\r\n        };\r\n        return oldState;\r\n    }\r\n    dragStart(e) {\r\n        this.shiftX = e - this.button.current.getBoundingClientRect().left;\r\n        this.setState({\r\n            dragging: true\r\n        });\r\n    }\r\n    dragMove(x, y) {\r\n        if (this.state.dragging) {\r\n            this.setState({\r\n                markerPos: x - this.shiftX,\r\n                position: 100 * (x - this.shiftX) / this.state.width\r\n            });\r\n        }\r\n    }\r\n    dragStop() {\r\n        this.setState({\r\n            dragging: false\r\n        });\r\n    }\r\n    onHover() {\r\n        this.stopPulse();\r\n    }\r\n    onOut() {\r\n        this.startPulse();\r\n    }\r\n    render() {\r\n        let pulseParams = {};\r\n        if (this.state.pulse) {\r\n            switch (this.state.pulseState) {\r\n                case 0:\r\n                    pulseParams = {\r\n                        ...this.pulsePosition(0),\r\n                        ...Transition,\r\n                        opacity: 0.7\r\n                    }\r\n                    break;\r\n                case 1:\r\n                case 2:\r\n                    pulseParams = {\r\n                        ...this.pulsePosition(25),\r\n                        ...Transition,\r\n                        opacity: 0\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    pulseParams = {\r\n                        ...this.pulsePosition(25),\r\n                        ...NoTransition,\r\n                        opacity: 0\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    pulseParams = {\r\n                        ...this.pulsePosition(0),\r\n                        ...NoTransition,\r\n                        opacity: 0.7\r\n                    };\r\n                    break;\r\n            }\r\n        }\r\n        return (<div className=\"slider\" ref={this.ref} onMouseUp={() => this.dragStop()} onTouchMove={(e) => { this.dragMove(e.touches[0].pageX, e.touches[0].pageY); }} onMouseMove={(e) => this.dragMove(e.pageX, e.pageY)}>\r\n            {this.props.background && <SliderBackground image={this.props.background.image} content={this.props.background.component} />}\r\n            {this.props.foreground && <SliderForeground image={this.props.foreground.image} position={this.state.position} content={this.props.foreground.component} />}\r\n            {(this.state.width >= 0 && this.props.foreground && this.props.background) && <button className=\"slider-draggable\" ref={this.button} onTouchStart={(e) => this.dragStart(e.touches[0].pageX)} onTouchEnd={(e) => this.dragStop() } onMouseDown={(e) => this.dragStart(e.clientX) } onDragStart={() => false} onMouseOver={() => this.onHover() } onMouseOut={() => this.onOut() } style={{\r\n                \"left\": this.state.markerPos + \"px\",\r\n            }}><i className=\"fas fa-arrows-alt-h\"/></button>}\r\n            {(this.state.width >= 0 && this.state.pulse && !this.state.dragging && this.props.foreground && this.props.background) && <button className=\"slider-draggable-shadow\" ref={this.shadow} style={{\r\n                ...pulseParams,\r\n                \"borderRadius\": 100\r\n            }}></button>}\r\n        </div>)\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAOA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAGA;AAHA;AAKA;AACA;AAAA;AACA;AAGA;AAHA;AAKA;AACA;AAAA;AACA;AAGA;AAHA;AAKA;AA7BA;AA+BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AA7EA;AAAA;AACA;AACA;AADA;AAGA;AACA;;;;AAzEA;AACA;;;;;A","sourceRoot":""}